const { connectDB, client } = require("./db");

async function seedData() {
  try {
    const db = await connectDB();

    // Xo√° d·ªØ li·ªáu c≈©
    const collections = [
      "sinhvien", "phong", "dichvu", "sudung_dichvu",
      "khach", "xegui", "vethang", "luot_gui_lay_xe"
    ];
    for (const name of collections) {
      await db.collection(name).deleteMany({});
    }
    console.log("‚úÖ ƒê√£ xo√° to√†n b·ªô d·ªØ li·ªáu c≈©");

    // 1. Ph√≤ng
    await db.collection("phong").insertMany([
      { soPhong: "101", loaiPhong: "Vip", donGia: 500000, soNguoiToiDa: 4 },
      { soPhong: "102", loaiPhong: "Thuong", donGia: 400000, soNguoiToiDa: 3 }
    ]);
    console.log("‚úÖ ƒê√£ th√™m d·ªØ li·ªáu ph√≤ng");

    // 2. Sinh vi√™n
    await db.collection("sinhvien").insertMany([
      {
        maSV: "SV001",
        hoTen: "Qu·∫£n Tr∆∞·ªùng Huy",
        cmt: "123456789",
        ngaySinh: new Date("2003-05-10"),
        lop: "KTPM01",
        queQuan: "Ph√∫ Th·ªç",
        phong: "101"
      },
      {
        maSV: "SV002",
        hoTen: "H√°n Long",
        cmt: "987654321",
        ngaySinh: new Date("2002-11-20"),
        lop: "CNTT02",
        queQuan: "Ph√∫ Th·ªç",
        phong: "101"
      }
    ]);
    console.log("‚úÖ ƒê√£ th√™m d·ªØ li·ªáu sinh vi√™n");

    // 3. D·ªãch v·ª•
    await db.collection("dichvu").insertMany([
      { maDV: "DV001", tenDV: "Gi·∫∑t l√†", donGia: 40000 },
      { maDV: "DV002", tenDV: "Tr√¥ng xe", donGia: 100000 },
      { maDV: "DV003", tenDV: "Cho thu√™ xe", donGia: 50000 },
      { maDV: "DV004", tenDV: "ƒÇn u·ªëng", donGia: 30000 }
    ]);
    console.log("‚úÖ ƒê√£ th√™m d·ªØ li·ªáu d·ªãch v·ª•");

    // 4. S·ª≠ d·ª•ng d·ªãch v·ª•
    await db.collection("sudung_dichvu").insertMany([
      { maSV: "SV001", maDV: "DV001", soLan: 5, thoiGian: new Date("2025-04-01") },
      { maSV: "SV001", maDV: "DV004", soLan: 10, thoiGian: new Date("2025-04-03") },
      { maSV: "SV002", maDV: "DV003", soLan: 2, thoiGian: new Date("2025-04-05") }
    ]);
    console.log("‚úÖ ƒê√£ th√™m d·ªØ li·ªáu s·ª≠ d·ª•ng d·ªãch v·ª•");

    // 5. Kh√°ch ƒë·∫øn thƒÉm (tr√°nh tr√πng CMT)
    await db.collection("khach").insertMany([
      {
        cmt: "999999999",
        ten: "T·∫° Huy",
        ngaySinh: new Date("2000-01-10"),
        maSV: "SV001",
        ngayDen: new Date("2025-04-01")
      },
      {
        cmt: "18273783",
        ten: "L√™ VƒÉn C√°c",
        ngaySinh: new Date("1999-12-10"),
        maSV: "SV001",
        ngayDen: new Date("2025-04-02")
      }
    ]);
    console.log("‚úÖ ƒê√£ th√™m d·ªØ li·ªáu kh√°ch ƒë·∫øn thƒÉm");

    // 6. Xe th√°ng (xegui)
    await db.collection("xegui").insertMany([
      { bienSo: "19S1-27127", loaiXe: "xe m√°y" },
      { bienSo: "19S1-32621", loaiXe: "xe m√°y" }
    ]);
    console.log("‚úÖ ƒê√£ th√™m d·ªØ li·ªáu xe th√°ng");

    // 7. V√© th√°ng (test ƒë√∫ng r√†ng bu·ªôc 2 xe)
    await db.collection("vethang").insertMany([
      {
        mave:"1",
        maSV: "SV001",
        bienSoXe: "19S1-27127",
        ngayDangKy: new Date("2025-04-01"),
        donGia: 100000
      },
      {
        mave:"2",
        maSV: "SV001",
        bienSoXe: "19S1-32621",
        ngayDangKy: new Date("2025-04-01"),
        donGia: 100000
      },
      {
        mave:"3",
        maSV: "SV001",
        bienSoXe: "30B-67891",
        ngayDangKy: new Date("2025-04-01"),
        donGia: 100000
      }
    ]);
    console.log("‚úÖ ƒê√£ th√™m d·ªØ li·ªáu v√© th√°ng");

    // 8. L∆∞·ª£t g·ª≠i/l·∫•y xe
    await db.collection("luot_gui_lay_xe").insertMany([
      { maluot:1,
        bienSoXe: "19S1-32621",
        thoiGian: new Date("2025-04-01T08:00:00"),
        loai: "g·ª≠i",
        tinhPhi: false
      },
      {
        maluot:2,
        bienSoXe: "19S1-32621",
        thoiGian: new Date("2025-04-01T10:00:00"),
        loai: "l·∫•y",
        tinhPhi: false
      },
      { 
        maluot:3,
        bienSoXe: "19S1-32621",
        thoiGian: new Date("2025-04-01T20:00:00"),
        loai: "g·ª≠i",
        tinhPhi: true
      }
    ]);
    console.log("‚úÖ ƒê√£ th√™m d·ªØ li·ªáu l∆∞·ª£t g·ª≠i/l·∫•y xe");

    console.log("üéâ D·ªØ li·ªáu m·∫´u ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!");
  } catch (err) {
    console.error("‚ùå L·ªói khi th√™m d·ªØ li·ªáu m·∫´u:", err);
  } finally {
    await client.close();
  }
}

seedData();